<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.asset.getstore.mapper.GetstoreassetMapper">
    
	<sql id="getstoreassetColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.assetname AS "assetname",
		a.specimodel AS "specimodel",
		a.buytime AS "buytime",
		a.amount AS "amount",
		a.number AS "number",
		a.address AS "address",
		a.useperson AS "useperson",
		a.usestatus AS "usestatus",
		a.personliable AS "personliable",
		a.yearnum AS "yearnum",
		a.assetvalue AS "assetvalue"
	</sql>
	
	<sql id="getstoreassetJoins">
		
		LEFT JOIN sys_user useperson ON useperson.id = a.useperson
		LEFT JOIN sys_user personliable ON personliable.id = a.personliable
	</sql>


	
    
	<select id="get" resultType="Getstoreasset" >
		SELECT 
			<include refid="getstoreassetColumns"/>
		FROM getstoreasset a
		<include refid="getstoreassetJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Getstoreasset" >
		SELECT 
			<include refid="getstoreassetColumns"/>
		FROM getstoreasset a
		<include refid="getstoreassetJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="assetname != null and assetname != ''">
				AND a.assetname = #{assetname}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Getstoreasset" >
		SELECT 
			<include refid="getstoreassetColumns"/>
		FROM getstoreasset a
		<include refid="getstoreassetJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO getstoreasset(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			assetname,
			specimodel,
			buytime,
			amount,
			number,
			address,
			useperson,
			usestatus,
			personliable,
			yearnum,
			assetvalue
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{assetname},
			#{specimodel},
			#{buytime},
			#{amount},
			#{number},
			#{address},
			#{useperson},
			#{usestatus},
			#{personliable},
			#{yearnum},
			#{assetvalue}
		)
	</insert>
	
	<update id="update">
		UPDATE getstoreasset SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			assetname = #{assetname},
			specimodel = #{specimodel},
			buytime = #{buytime},
			amount = #{amount},
			number = #{number},
			address = #{address},
			useperson = #{useperson},
			usestatus = #{usestatus},
			personliable = #{personliable},
			yearnum = #{yearnum},
			assetvalue = #{assetvalue}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM getstoreasset
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE getstoreasset SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Getstoreasset" statementType="STATEMENT">
		select * FROM getstoreasset  where ${propertyName} = '${value}'
	</select>
	
</mapper>