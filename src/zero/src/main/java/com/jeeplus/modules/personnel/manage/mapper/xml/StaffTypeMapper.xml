<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.personnel.manage.mapper.StaffTypeMapper">
    
	<sql id="staffTypeColumns">
		a.id AS "id",
		a.type AS "type",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="staffTypeJoins">
		
	</sql>
	<select id="find" resultType="StaffType" >
		SELECT
		<include refid="staffTypeColumns"/>
		FROM staff_type a
		<include refid="staffTypeJoins"/>
		WHERE
		<if test="type !=null and type!='' ">
			a.type = #{type}
		</if>
		and a.del_flag = #{DEL_FLAG_NORMAL}
	</select>

	<select id="count" resultType="int" >
		SELECT
		count(*)
		FROM staff_type a
		<include refid="staffTypeJoins"/>
		WHERE
		<if test="type !=null and type!='' ">
			a.type = #{type}
		</if>
		and a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
    
	<select id="get" resultType="StaffType" >
		SELECT 
			<include refid="staffTypeColumns"/>
		FROM staff_type a
		<include refid="staffTypeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="StaffType" >
		SELECT 
			<include refid="staffTypeColumns"/>
		FROM staff_type a
		<include refid="staffTypeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="StaffType" >
		SELECT 
			<include refid="staffTypeColumns"/>
		FROM staff_type a
		<include refid="staffTypeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO staff_type(
			id,
			type,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{type},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE staff_type SET 	
			type = #{type},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM staff_type
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE staff_type SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="StaffType" statementType="STATEMENT">
		select * FROM staff_type  where ${propertyName} = '${value}'
	</select>
	
</mapper>