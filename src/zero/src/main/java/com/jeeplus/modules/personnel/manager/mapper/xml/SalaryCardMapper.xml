<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.personnel.manager.mapper.SalaryCardMapper">
    
	<sql id="salaryCardColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.name AS "name.id",
		a.bank AS "bank",
		a.bank_card AS "bankCard",
		a.salary_status AS "salaryStatus",
		a.staff_id AS "staffId",
		a.remarks AS "remarks",
		name.name AS "name.name"
	</sql>
	<sql id="salaryCardJoins">
		LEFT JOIN staff name ON name.id = a.name
	</sql>

	<select id="getName" resultType="SalaryCard" >
	SELECT
	<include refid="salaryCardColumns"/>
	FROM salary_card a
	<include refid="salaryCardJoins"/>
	WHERE a.name = #{name}
	and a.del_flag = 0
	</select>

	<select id="find" resultType="SalaryCard" >
		SELECT
		<include refid="salaryCardColumns"/>
		FROM salary_card a
		<include refid="salaryCardJoins"/>
		WHERE
		<if test="bankCard !=null and bankCard!='' ">
		   a.bank_card = #{bankCard}
		</if>
		and a.del_flag = 0
	</select>

	<select id="count" resultType="int" >
	SELECT
	count(*)
	FROM salary_card a
	<include refid="salaryCardJoins"/>
	WHERE
	<if test="bankCard !=null and bankCard!='' ">
		a.bank_card = #{bankCard}
	</if>
	and a.del_flag = 0
</select>
    
	<select id="get" resultType="SalaryCard" >
		SELECT 
			<include refid="salaryCardColumns"/>
		FROM salary_card a
		<include refid="salaryCardJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getActive" resultType="SalaryCard" >
		SELECT
		<include refid="salaryCardColumns"/>
		FROM salary_card a
		<include refid="salaryCardJoins"/>
		WHERE a.salary_status = 1 and a.del_flag = 0
	</select>
	
	<select id="findList" resultType="SalaryCard" >
		SELECT 
			<include refid="salaryCardColumns"/>
		FROM salary_card a
		<include refid="salaryCardJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="name != null and name.id != null and name.id != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name.id}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name.id}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name.id},'%')</if>
			</if>
			<if test="depart != null and depart.id != null and depart.id != ''">
				AND name.depart = #{depart.id}
			</if>
			<if test="station != null and station.id != null and station.id != ''">
				AND name.station = #{station.id}
			</if>
			<if test="idCard != null and idCard.idCard != null and idCard.idCard != ''">
				AND name.id_card = #{idCard.idCard}
			</if>
			<if test="staffStatus != null and staffStatus.id != null and staffStatus.id != ''">
				AND name.status = #{staffStatus.id}
			</if>
			<if test="salaryStatus != null and  salaryStatus != ''">
				AND salary_status = #{salaryStatus}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="SalaryCard" >
		SELECT 
			<include refid="salaryCardColumns"/>
		FROM salary_card a
		<include refid="salaryCardJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO salary_card(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			name,
			bank,
			bank_card,
			salary_status,
			staff_id,
			remarks
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{name.id},
			#{bank},
			#{bankCard},
			#{salaryStatus},
			#{staffId},
			#{remarks}
		)
	</insert>
	
	<update id="update">
		UPDATE salary_card SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			name = #{name.id},
			bank = #{bank},
			bank_card = #{bankCard},
			salary_status = #{salaryStatus},
			staff_id = #{staffId},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM salary_card
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE salary_card SET 
			del_flag = 1
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="SalaryCard" statementType="STATEMENT">
		select * FROM salary_card  where ${propertyName} = '${value}'
	</select>
	
</mapper>