<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wsh.zero.mapper.SysUserMapper">
    <resultMap id="resultSysUserVO" type="SysUserVO">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="user_amount" property="userAmount"/>
        <result column="user_pwd" property="userPwd"/>
        <result column="frozen" property="frozen"/>
    </resultMap>
    <resultMap id="resultSysUserEntity" type="SysUserEntity">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="user_amount" property="userAmount"/>
        <result column="user_pwd" property="userPwd"/>
        <collection property="roleList" ofType="SysRoleEntity" column="id">
            <id column="sid" property="id"/>
            <result column="role_name" property="roleName"/>
            <collection property="powerList" ofType="SysPowerEntity" column="sid">
                <id column="pid" property="id"/>
                <result column="power_name" property="powerName"/>
                <result column="power_path" property="powerPath"/>
            </collection>
        </collection>
    </resultMap>
    <sql id="list_fields">
        id, user_name,user_amount,user_pwd
    </sql>
    <sql id="list_sql">
        <where>

        </where>
    </sql>
    <select id="getList" resultMap="resultSysUserVO">
        select
        <include refid="list_fields"/>
        from sys_user
        <include refid="list_sql"/>
        <if test="pageNum !=-1 and pageSize!=-1">
            limit #{pageNum},#{pageSize}
        </if>
    </select>

    <select id="getCount" resultType="int">
        select count(1) from sys_user
        <include refid="list_sql"/>
    </select>
    <insert id="save">
        insert into sys_user(id,user_name,user_amount,user_pwd)
        values (#{id},#{userName},#{userAmount},#{userPwd})
    </insert>
    <update id="update">
        update sys_user set user_amount=#{userAmount},user_name=#{userName} where id=#{id}
    </update>
    <delete id="delByPrimaryKey">
        delete from sys_user where id=#{id}
    </delete>
    <select id="getByPrimaryKey" resultMap="resultSysUserVO">
        select
        <include refid="list_fields"/>
        from sys_user where id=#{id}
    </select>
    <select id="getUserInfoByUserAmount" resultMap="resultSysUserEntity">
        SELECT su.id,su.user_amount,su.user_name,su.user_pwd,su.frozen,
        sr.id as sid,sr.role_name,
        sp.id as pid,sp.power_name,sp.power_path
        FROM sys_user su
        left join sys_user_role sur on su.id=sur.user_id
        left join sys_role sr on sur.role_id=sr.id
        left join sys_role_power srp on sr.id=srp.role_id
        left join sys_power sp on srp.power_id=sp.id
        WHERE su.user_amount=#{userAmount}
    </select>

    <select id="isExistUserAmount" resultType="boolean">
        select count(1) from sys_user where user_amount=#{userAmount}
    </select>
    <select id="getFrozenValueByUserName" resultType="boolean">
        select frozen from sys_user where user_name=#{userName}
    </select>

    <select id="isExistUser" resultType="boolean">
        select count(1) from sys_user where user_amount=#{userAmount} and user_pwd=#{userPwd}
    </select>
    <select id="getUserNameByUserAmount" resultType="String">
        select user_name from sys_user where user_amount=#{userAmount}
    </select>
    <select id="getUserPwdByUserAmount" resultType="String">
        select user_pwd from sys_user where user_amount=#{userAmount}
    </select>
</mapper>