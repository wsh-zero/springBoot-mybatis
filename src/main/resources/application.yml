server:
  port: 80

spring:
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  datasource:
    name: test
    #    url: jdbc:mysql://180.76.111.215:3306/zero?characterEncoding=utf8&useSSL=false&serverTimezone=UTC
    #    username: wsh_zero
    #    password: Zero15397608105
    url: jdbc:mysql:///zero?characterEncoding=utf8&useSSL=false&serverTimezone=UTC
    username: wsh_zero
    password: 1111
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
  #thymeleaf的配置是为了去掉html的校验(+ nekohtml包,自动处理未闭合标签)
  thymeleaf:
    mode: LEGACYHTML5
    cache: false
  #  resources:
  #    static-locations: classpath:/templates/ # 设置web访问html文件
  auto:
    openurl: false
  web:
    loginurl: http://localhost:80
    googleexcute: C:\Users\25435\AppData\Local\Google\Chrome\Application\chrome.exe
    #redis
  redis:
    host: localhost
    port: 6379
  #实体类转json时过滤掉空值
  #  * Include.Include.ALWAYS 默认
  #  * Include.NON_DEFAULT 属性为默认值不序列化
  #  * Include.NON_EMPTY 属性为 空（""） 或者为 null 都不序列化
  #  * Include.NON_NULL 属性为NULL 不序列化
#  jackson:
#    default-property-inclusion: non_null
#配置日志
logging:
  level:
    root: INFO
    org:
      springframework:
        web: DEBUG
    #      hibernate: ERROR
    #    配置打印sql(暂时没找到通配符方法)
    com.wsh.zero.mapper: debug
  file: log/log.log


## 该配置节点为独立的节点，有很多同学容易将这个配置放在spring的节点下，导致配置无法被识别
mybatis:
  mapper-locations: classpath:mybatis/mapper/*.xml  #注意：一定要对应mapper映射xml文件的所在路径
  type-aliases-package: com.wsh.zero.entity,com.wsh.zero.vo # 注意：对应实体类的路径
  #  config-location: classpath:mybatis/mybatis-config.xml  # mybatis配置文件

person:
  age: 18
  name: zero
  boss: false
  birth: 2018/8/2
  maps: {k1: mapKey1,k2: mapKey2}
  list:
  - list1
  - list2
  - list3
  malePerson:
    name: 1
    javaPerson:
      name: 2
  malePersonList:
  - name: male1
    javaPerson:
      name: javaPerson1
  - name: male2
    javaPerson:
      name: javaPerson2